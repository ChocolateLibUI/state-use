"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});class b{constructor(){this.subscribers=[]}subscribe(s){return this.subscribers.push(s),s}unsubscribe(s){const e=this.subscribers.indexOf(s);return e!=-1?this.subscribers.splice(e,1):console.warn("Subscriber not found with state",this,s),s}updateSubscribers(s){for(let e=0,i=this.subscribers.length;e<i;e++)try{this.subscribers[e](s)}catch(t){console.warn("Failed while calling subscribers ",t,this,this.subscribers[e])}}subscribeOptions(s,e){return this.optionSubscribers||(this.optionSubscribers=[]),this.optionSubscribers.push(s),e&&s(this.options),s}unsubscribeOptions(s){if(this.optionSubscribers){const e=this.optionSubscribers.indexOf(s);e!=-1?this.optionSubscribers.splice(e,1):console.warn("Option subscriber not found with state",this,s)}return s}updateOptionsSubscribers(s){if(this.optionSubscribers)for(let e=0,i=this.optionSubscribers.length;e<i;e++)try{this.optionSubscribers[e](s)}catch(t){console.warn("Failed while calling subscribers ",t,this,this.optionSubscribers[e])}}}class u extends b{constructor(s){super(),this.value=s}subscribe(s,e){if(e)try{s(this.value)}catch{console.warn("Failed while calling update function",this,s)}return super.subscribe(s)}set(s){this.check&&this.value!==s&&this.check(s)}writeable(){return!!this._writeable}get(){return this.value}then(s){return new Promise(e=>{e(s(this.value))})}}const o=(r,s,e)=>{let i=new u(r);return s&&(i.check=s),e&&(i.options=e),{state:i,set:t=>{i.updateSubscribers(t)},setOptions:t=>{i.updateOptionsSubscribers(t)}}};exports.createStateValue=o;
